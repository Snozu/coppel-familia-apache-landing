---
// CTA Section - Final call to action
---

<section class="cta-section relative min-h-screen bg-black flex flex-col text-center px-4 py-8">
  
  <!-- CTA Title - Upper third, 20% larger -->
  <div class="cta-title pt-32 pb-8">
    <h2 class="text-white text-5xl md:text-6xl lg:text-7xl leading-relaxed font-light tracking-widest">
      <span class="block">Sea cual sea</span>
      <span class="block italic">tu camino,</span>
      <span class="block">hay una <span class="text-red-500 font-bold">TVS</span></span>
      <span class="block font-bold">que te lleva.</span>
    </h2>
  </div>
  
  <!-- CTA Button - Middle section, 16% larger -->
  <div class="cta-button-container flex-1 flex items-start justify-center py-16" style="padding-top: clamp(5rem, 10vh, 6rem);">
    <a href="https://www.coppel.com/tvs" target="_blank" rel="noopener noreferrer" class="cta-button group relative overflow-visible bg-blue-600 hover:bg-blue-700 text-white font-semibold px-10 py-7 rounded-lg transition-all duration-300 transform hover:scale-105 inline-flex items-center justify-center cursor-pointer" style="transform: scale(1.16);" data-glow-effect="true">
      
      <!-- Button Content - Two lines with arrow -->
      <span class="relative z-10 flex items-center space-x-4">
        <span class="flex flex-col items-center text-center leading-tight">
          <span class="block">Descúbrela en tu Coopel</span>
          <span class="block">más cercano</span>
        </span>
        <svg 
          class="w-6 h-6 transform group-hover:translate-x-1 transition-transform duration-300 flex-shrink-0 text-yellow-400 arrow-animate" 
          fill="none" 
          stroke="currentColor" 
          viewBox="0 0 24 24"
        >
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M17 8l4 4m0 0l-4 4m4-4H3" />
        </svg>
      </span>
      
      <!-- LED Glow Effect -->
      <div class="absolute inset-0 rounded-lg bg-gradient-to-r from-red-500/20 via-pink-500/20 to-red-500/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 blur-sm"></div>
    </a>
  </div>

<script>
  // @ts-nocheck
  // Lazy Loading and Performance Optimization for Glow Effects
  class CTAGlowManager {
    constructor() {
      this.ctaButton = null;
      this.intersectionObserver = null;
      this.isGlowActive = false;
    }

    init() {
      this.ctaButton = document.querySelector('[data-glow-effect="true"]');
      if (!this.ctaButton) return;

      this.setupIntersectionObserver();
      this.setupPerformanceOptimizations();
    }

    setupIntersectionObserver() {
      if (!('IntersectionObserver' in window)) {
        // Fallback for older browsers - activate immediately
        this.activateGlowEffects();
        return;
      }

      this.intersectionObserver = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting && entry.intersectionRatio > 0.5) {
              this.activateGlowEffects();
            } else {
              this.deactivateGlowEffects();
            }
          });
        },
        {
          threshold: [0.5],
          rootMargin: '0px 0px -10% 0px'
        }
      );

      // Observe the CTA section
      const ctaSection = document.querySelector('.cta-section');
      if (ctaSection) {
        this.intersectionObserver.observe(ctaSection);
      }
    }

    setupPerformanceOptimizations() {
      if (!this.ctaButton) return;

      // Add GPU acceleration hints
      this.ctaButton.style.willChange = 'transform';
      
      // Optimize for reduced motion
      if (window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
        this.ctaButton.setAttribute('data-reduced-motion', 'true');
      }

      // Pause animations when page is not visible
      document.addEventListener('visibilitychange', () => {
        if (document.hidden) {
          this.pauseAnimations();
        } else if (this.isGlowActive) {
          this.resumeAnimations();
        }
      });
    }

    activateGlowEffects() {
      if (this.isGlowActive || !this.ctaButton) return;
      
      console.log('Activating CTA glow effects');
      this.isGlowActive = true;
      
      // Use requestAnimationFrame for smooth activation
      requestAnimationFrame(() => {
        this.ctaButton.classList.add('glow-active');
        
        // Enable CSS animations by modifying the stylesheet
        const style = document.createElement('style');
        style.textContent = `
          .cta-button.glow-active[data-glow-effect="true"]::before {
            animation: enhanced-glowing-border 4s linear infinite;
          }
          
          .cta-button.glow-active[data-glow-effect="true"]::after {
            animation: enhanced-outer-glow 4s ease-in-out infinite;
          }
        `;
        document.head.appendChild(style);
        this.glowStyleSheet = style;
      });
    }

    deactivateGlowEffects() {
      if (!this.isGlowActive || !this.ctaButton) return;
      
      console.log('Deactivating CTA glow effects');
      this.isGlowActive = false;
      
      this.ctaButton.classList.remove('glow-active');
      
      // Remove animation stylesheet
      if (this.glowStyleSheet) {
        this.glowStyleSheet.remove();
        this.glowStyleSheet = null;
      }
    }

    pauseAnimations() {
      if (!this.ctaButton) return;
      this.ctaButton.style.animationPlayState = 'paused';
    }

    resumeAnimations() {
      if (!this.ctaButton) return;
      this.ctaButton.style.animationPlayState = 'running';
    }

    cleanup() {
      if (this.intersectionObserver) {
        this.intersectionObserver.disconnect();
      }
      if (this.glowStyleSheet) {
        this.glowStyleSheet.remove();
      }
    }
  }

  // Initialize CTA Glow Manager
  const ctaGlowManager = new CTAGlowManager();
  
  function initializeCTAGlow() {
    console.log('Initializing CTA Glow Manager...');
    ctaGlowManager.init();
  }
  
  // Multiple initialization strategies
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeCTAGlow);
  } else {
    initializeCTAGlow();
  }
  
  // Backup initialization
  setTimeout(() => {
    if (!ctaGlowManager.ctaButton) {
      console.log('Backup CTA Glow initialization...');
      ctaGlowManager.init();
    }
  }, 500);

  // Cleanup on page unload
  window.addEventListener('beforeunload', () => {
    ctaGlowManager.cleanup();
  });
</script>
  
  <!-- TVS Logo - Higher positioning above navbar -->
  <div class="tvs-logo flex justify-center pb-2" style="transform: translateY(clamp(-25vh, -250%, -35vh));">
    <img 
      src="/hero/assets/TVSLogo.png" 
      alt="TVS Logo" 
      class="h-10 md:h-12 lg:h-14 w-auto opacity-90"
      style="transform: scale(1.0);"
    />
  </div>
  
  <!-- Copyright Footer Section - Well above navbar -->
  <div class="cta-footer flex justify-center pb-4" style="transform: translateY(clamp(-22vh, -160%, -15vh));">
    
    <!-- Copyright - Above navbar position -->
    <div class="copyright">
      <p class="text-gray-400 text-sm">
        © Copyright 2025. All Rights Reserved.
      </p>
    </div>
    
  </div>
  
</section>

<style>
  .cta-section {
    background: linear-gradient(135deg, #000000 0%, #111111 100%);
    min-height: 100vh;
  }

  .cta-title h2 {
    text-shadow: 3px 3px 12px rgba(0, 0, 0, 0.9);
    line-height: 1.6;
    letter-spacing: 0.08em; /* More spacing between letters */
    font-weight: 300; /* Lighter weight for more elegance */
  }

  /* CTA Button Optimized Glowing Border Effects */
  .cta-button {
    background: linear-gradient(135deg, #2563eb 0%, #1d4ed8 100%);
    border: 2px solid transparent;
    background-clip: padding-box;
    position: relative;
    overflow: visible;
    will-change: transform;
  }

  /* Enhanced Glowing Border Effect - Red Branding */
  .cta-button[data-glow-effect="true"]::before {
    content: '';
    position: absolute;
    inset: -2px;
    padding: 2px;
    background: linear-gradient(45deg, 
      #dc2626, #ef4444, #f87171, #fca5a5, 
      #ef4444, #dc2626, #b91c1c, #ef4444
    );
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: xor;
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    filter: blur(1px) brightness(1.3);
    animation: none; /* Disabled by default for performance */
    will-change: filter, transform;
    transform: translate3d(0, 0, 0); /* GPU acceleration */
  }

  /* Optimized Border Animation - Red Tones */
  @keyframes enhanced-glowing-border {
    0% { 
      filter: blur(1px) brightness(1.3) saturate(1);
      transform: translate3d(0, 0, 0);
    }
    25% { 
      filter: blur(1.5px) brightness(1.5) saturate(1.2);
    }
    50% { 
      filter: blur(2px) brightness(1.8) saturate(1.4);
      transform: translate3d(0, 0, 0);
    }
    75% { 
      filter: blur(1.5px) brightness(1.5) saturate(1.2);
    }
    100% { 
      filter: blur(1px) brightness(1.3) saturate(1);
      transform: translate3d(0, 0, 0);
    }
  }

  /* Enhanced Shadow Glow Effect - Red Branding */
  .cta-button[data-glow-effect="true"]::after {
    content: '';
    position: absolute;
    inset: -8px;
    background: radial-gradient(circle, 
      rgba(239, 68, 68, 0.4) 0%,
      rgba(220, 38, 38, 0.35) 20%,
      rgba(185, 28, 28, 0.25) 40%,
      rgba(127, 29, 29, 0.15) 60%,
      rgba(239, 68, 68, 0.1) 80%,
      transparent 90%
    );
    border-radius: 50%;
    opacity: 0;
    filter: blur(6px);
    z-index: -1;
    will-change: opacity, transform;
    transform: translate3d(0, 0, 0) scale(1);
    animation: none; /* Disabled by default */
  }

  @keyframes enhanced-outer-glow {
    0%, 100% { 
      opacity: 0.6;
      transform: translate3d(0, 0, 0) scale(1);
      filter: blur(6px);
    }
    50% { 
      opacity: 1;
      transform: translate3d(0, 0, 0) scale(1.1);
      filter: blur(8px);
    }
  }

  /* Hover States - Enhanced Red Glow */
  .cta-button[data-glow-effect="true"]:hover::before {
    filter: blur(2px) brightness(2.2) saturate(1.6);
    animation: enhanced-glowing-border 2s linear infinite;
  }

  .cta-button[data-glow-effect="true"]:hover::after {
    opacity: 1;
    animation: enhanced-outer-glow 2s ease-in-out infinite;
  }

  /* Performance Optimizations */
  .cta-button[data-glow-effect="true"] {
    isolation: isolate;
    transform-style: preserve-3d;
  }

  /* Reduced Motion Support */
  @media (prefers-reduced-motion: reduce) {
    .cta-button[data-glow-effect="true"]::before,
    .cta-button[data-glow-effect="true"]::after {
      animation: none !important;
      filter: blur(2px) brightness(1.2) !important;
    }
  }

  /* Arrow Animation */
  .arrow-animate {
    animation: arrow-pulse 2s ease-in-out infinite;
  }

  .cta-button:hover .arrow-animate {
    animation: arrow-bounce 0.6s ease-in-out infinite;
  }

  @keyframes arrow-pulse {
    0%, 100% { 
      transform: translateX(0) scale(1);
      opacity: 1;
    }
    50% { 
      transform: translateX(2px) scale(1.1);
      opacity: 0.8;
    }
  }

  @keyframes arrow-bounce {
    0%, 100% { transform: translateX(0) scale(1); }
    50% { transform: translateX(6px) scale(1.15); }
  }

  /* Button two-line text styling */
  .cta-button span.block {
    line-height: 1.3;
  }

  /* Button and arrow styling */
  .cta-button:hover svg {
    animation: arrow-bounce 0.6s ease-in-out;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .cta-title {
      padding-top: 3rem !important;
      padding-bottom: 1rem !important;
    }
    
    .cta-title h2 {
      font-size: 3rem; /* 20% larger from 2.5rem */
      line-height: 1.4;
      letter-spacing: 0.06em;
    }
    
    .cta-button-container {
      padding: 1.5rem 0 !important;
      padding-top: 4rem !important;
    }
    
    .cta-button {
      padding: 18px 36px; /* 16% larger */
      font-size: 16px;
      transform: scale(1.12) !important; /* Adjusted for mobile */
    }
    
    .cta-button svg {
      width: 1.25rem;
      height: 1.25rem;
    }
    
    .tvs-logo img {
      height: 3rem !important; /* Larger for mobile */
    }
  }

  @media (max-width: 480px) {
    .cta-title {
      padding-top: 2.5rem !important;
      padding-bottom: 1rem !important;
    }
    
    .cta-title h2 {
      font-size: 2.2rem; /* Reduced for small screens */
      letter-spacing: 0.04em;
      line-height: 1.3;
    }
    
    .cta-button-container {
      padding: 1rem 0 !important;
      padding-top: 2.5rem !important;
    }
    
    .cta-button {
      padding: 14px 28px;
      font-size: 14px;
      transform: scale(1.0) !important; /* Normal scale for small screens */
    }
    
    .tvs-logo {
      transform: translateY(clamp(-20vh, -180%, -25vh)) !important;
    }
    
    .tvs-logo img {
      height: 2rem !important;
    }
    
    .cta-footer {
      transform: translateY(clamp(-15vh, -100%, -10vh)) !important;
    }
  }

  /* iPhone SE specific optimizations */
  @media (max-width: 375px) and (max-height: 667px) {
    .cta-title {
      padding-top: 2rem !important;
    }
    
    .cta-title h2 {
      font-size: 2rem;
      line-height: 1.2;
    }
    
    .cta-button-container {
      padding-top: 2rem !important;
    }
    
    .tvs-logo {
      transform: translateY(-15vh) !important;
    }
    
    .tvs-logo img {
      height: 1.8rem !important;
    }
    
    .cta-footer {
      transform: translateY(-12vh) !important;
    }
    
    .cta-footer p {
      font-size: 0.75rem;
    }
  }

  /* Hover Effects */
  .cta-button {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .cta-button:active {
    transform: scale(0.98);
  }

  /* TVS Logo Styling */
  .tvs-logo img {
    filter: brightness(0.9) contrast(1.1);
    transition: all 0.3s ease;
  }

  .tvs-logo:hover img {
    filter: brightness(1.1) contrast(1.2);
    transform: scale(1.05);
  }

  /* Typography Improvements */
  .cta-title h2 {
    font-family: 'Montserrat', sans-serif;
    letter-spacing: -0.02em;
  }

  .copyright p {
    font-family: 'Montserrat', sans-serif;
    letter-spacing: 0.025em;
  }

  /* Accessibility */
  .cta-button:focus {
    outline: 2px solid rgba(239, 68, 68, 0.6);
    outline-offset: 2px;
  }

  /* Dark gradient enhancement */
  .cta-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(circle at center bottom, rgba(37, 99, 235, 0.05) 0%, transparent 70%);
    pointer-events: none;
  }
</style>